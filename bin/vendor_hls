#!/bin/bash

# We want to load Hls.js dynamically so that it is only loaded when it is needed.
#
# Vite supports dynamic imports for ES modules, but this is not supported for
# UMD modules which instead bundle all dependencies into the output file.
#
# Therefore, the approach works as follows:
#
# 1) Set Hls as an external in vite.config.js to exclude it from es.js and umd.js
# 2) Load Hls from node_modules/ in development mode
# 3) Load Hls from dist/ in production mode
#    a) Copy Hls from node_modules to dist/ using the script below
#    b) Replace references to node_modules/ with dist/
#
# Note that when Hls is loaded from dist/ in production mode, it loads a UMD
# module rather than an ES module. Because of this, there is no default export
# and Hls is added to the global window object. The loadMedia.ts script tries to
# prevent overriding any existing Hls value that might be set on window.
#
# Note that imports are cached, so if you try to import the UMD module more than
# once, it will only have the side effect of setting window.Hls the first time.

cp node_modules/hls.js/dist/hls.light.min.js* dist/

# Replace with a path specifier of equal length to keep the sourcemap intact.
sed -i.backup 's:hls.js/dist/:././././././:' dist/es.js
sed -i.backup 's:hls.js/dist/:././././././:' dist/umd.js
rm dist/*.backup
