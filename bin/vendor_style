#!/bin/bash

# We want to load styles dynamically so that they are only loaded when needed.
# For example, if the player is used in headless mode we don't need the styles.
#
# Therefore, the approach works as follows:
#
# 1) Set loadTheStyles.ts as an external in vite.config to exclude it from es.js and umd.js
# 2) Write styles in the normal way using <style> tags in components
# 3) Load styles from <style> tags in development
# 4) Load styles from dist/style.js in production
#    a) When Vite builds the project it outputs style.css
#    b) Replace style.css with style.js (below) which adds a <style> tag to <head>
#    c) Mark components that require styles with import("../helpers/loadTheStyles.ts")
#    d) Replace references to loadTheStyles.ts with dist/style.js
#
# Note that we apply other transformations to styles before creating style.css
# using vite plugins, e.g. making all styles important to avoid accidental overrides.

cat > dist/style.js <<-EOF
(function () {
  if (document.getElementById("beyondwords-player-style")) { return; }

  var style = document.createElement("style");

  style.id = "beyondwords-player-style";
  style.type = "text/css";
  style.innerText = '$(cat dist/style.css)';

  document.head.append(style);
})();
EOF

rm dist/style.css

# Replace with a path specifier of equal length to keep the sourcemap intact.
sed -i.backup 's:"./helpers/loadTheStyles.ts":"./././././././././style.js":' dist/es.js
sed -i.backup 's:"./helpers/loadTheStyles.ts":BeyondWords.Player.styleSrc :' dist/umd.js
rm dist/*.backup
